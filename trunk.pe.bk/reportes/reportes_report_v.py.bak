import time
from report import report_sxw

import logging
_logger = logging.getLogger('reportes')


class reportes_report_v( report_sxw.rml_parse ):
	def __init__(self,cr,uid,name,context):
		super(reportes_report_v,self).__init__(cr,uid,name,context=context)
		self.localcontext.update({
		'time': time,
		'_periodos_v': self._periodos_v,
		'corto_dat_v': self.corto_dat_v,
		'get__v': self._get__v,
		})
		
	def _periodos_v(self, period_list):
		aux_=0
		feci=0
		fecf=0
		for period_id in period_list:
			if aux_==0:			
				self.cr.execute("select name from account_period where id=" + str(period_id) + "")	
				for record in self.cr.fetchall():
					feci= record[0]		
			aux_=aux_+1
		self.cr.execute("select name from account_period where id=" + str(period_id) + "")	
		for record in self.cr.fetchall():			
			fecf=record[0]					
		return 'Desde ' + feci + ' Hasta ' + fecf
		
	def corto_dat_v(self,arg1,largo):	
		if len(arg1)>largo:
			descripcion=arg1[:largo-1]
		else:
			descripcion=arg1
		return descripcion				
		
	def _get__v(self,co,pe,si,ty):        
	
		d = []		
		Lds=''
		Lds_=''
		cc=0	
		#cl=0	
		tpOo= ""
		aeOo = 0
		aeS=0
		txS=0
		unS=0  
		toS=0 
		cl=0 
		sum_ae=0
		sum_tx=0
		sum_un=0
		sum_to=0
		
		d.append({'auxiliar':'t',})							
		
		for p in pe:           
			Lds = Lds + str(p) + ","				
			
		while cc<len(Lds)-1:				
			Lds_= Lds_ + Lds[cc]
			cc=cc + 1
		

		sql = "SELECT ai.number,date_invoice,rp.rut, rp.name, aj.code, ai.amount_untaxed,	ai.amount_tax, ai.amount_total,   (select CASE WHEN sum(ait.base_amount) is null then 0 else sum(ait.base_amount) end as a from account_invoice_tax ait where UPPER(ait.name) like UPPER('%exento%') and ait.invoice_id = ai.id) base_amount 	FROM   public.account_invoice ai,   public.account_journal aj,   public.res_partner rp WHERE   ai.state <> 'draft' and  ai.partner_id = rp.id AND  aj.id = ai.journal_id and aj.code between '200' and '299' and  ai.period_id in ("+"".join(map(str, Lds_))+") and 	ai.company_id = "+ str(co[0])+ " order by ai.number"
		print(sql)
		self.cr.execute(sql)
		for record in self.cr.fetchall():

			nmOo = record[0]
			dtOo = record[1]
			rtOo = record[2]
			clOo = record[3]		
			tpOo = ""
			aeOo = record[8]
			
			if record[4]=="201":
				tpOo= "FN"
			elif record[4]=="202":
				tpOo= "FE"
			elif record[4]=="203":
				tpOo= "BV"	
			elif record[4]=="211" or record[4]=="212":
				tpOo= "EX"				
			elif record[4]=="213":
				tpOo= "EEX"
			elif record[4]=="221":
				tpOo= "ND"	
			elif record[4]=="241":
				tpOo= "NCN"
			elif record[4]=="242":
				tpOo= "NCE"	
				
			txOo = record[6] #tax
			
#			if record[8]==1:
#				aeOo="Afecto"
#			elif record[8]==2:
#				#txOo= '0'
#				aeOo="Exento"
			
			unOo = record[5] #untax
			toOo = record[7] #total
			
			sum_ae += aeOo
			sum_tx += txOo
			sum_un += unOo
			sum_to += toOo
			
			if cl==56:
				#OoO={'auxiliar':'tT'}				
				#d.append(OoO)
				OoO={
					'number': '', 
					'x_tipo_doc': '',
					'date_invoice': '',
					'rut': '',
					'cliente': '',
					'afe_exe':self.formatLang(aeS, digits=0),
					'cc_amount_tax': self.formatLang(txS, digits=0),
					'cc_amount_untaxed': self.formatLang(unS, digits=0),
					'cc_amount_total': self.formatLang(toS, digits=0),
					'auxiliar':'dT'
				}	
				d.append(OoO)
				
				aeS=0
				txS=0
				unS=0  
				toS=0 
				cl=0
				
				d.append({'auxiliar':'t',})			
				
			OoO={
				'number': nmOo, 
				'x_tipo_doc': tpOo,
				'date_invoice': dtOo,
				'rut': rtOo,
				'cliente': clOo,
				'afe_exe':self.formatLang(aeOo, digits=0),
				'cc_amount_tax': self.formatLang(txOo, digits=0),
				'cc_amount_untaxed': self.formatLang(unOo, digits=0),
				'cc_amount_total': self.formatLang(toOo, digits=0),
				'auxiliar':'d'
				}	
			
			aeS+=aeOo	
			txS+=txOo
			unS+=unOo
			toS+=toOo
			
			d.append(OoO)							
			
			cl+=1
			
		#preguntar k onda
		OoO={
			'number': '', 
			'x_tipo_doc': '',
			'date_invoice': '',
			'rut': '',
			'cliente': 'SUB TOTAL',
			'afe_exe':self.formatLang(aeS, digits=0),
			'cc_amount_tax': self.formatLang(txS, digits=0),
			'cc_amount_untaxed': self.formatLang(unS, digits=0),
			'cc_amount_total': self.formatLang(toS, digits=0),
			'auxiliar':'dT'
			}	
		d.append(OoO)
		
		aeS=0
		txS=0
		unS=0  
		toS=0
		
		OoO={
			'number': '', 
			'x_tipo_doc': '',
			'date_invoice': '',
			'rut': '',
			'cliente': 'TOTAL',
			'afe_exe':self.formatLang(sum_ae, digits=0),
			'cc_amount_tax': self.formatLang(sum_tx, digits=0),
			'cc_amount_untaxed': self.formatLang(sum_un, digits=0),
			'cc_amount_total': self.formatLang(sum_to, digits=0),
			'auxiliar':'dT'
			}

		d.append(OoO)	
			
		return d

report_sxw.report_sxw('report.reportes_print_libven', 'reportes',
      'addons/reportes/reportes_report_v.rml', parser=reportes_report_v, header=False)
